 mongodb+srv://pith_studies_admin:<password>@cluster0.fh4fj.mongodb.net/pith_studies?retryWrites=true&w=majority

.env: mongodb://root:example@mongo:27017/?authSource=admin
docker-compose.yml
  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASS}

TODO:
  Also give them to Carley and have her sign new form (?).

- extract pid from URL instead of entering it in
  Through URL participant_ID, should be able to LOAD the proper stage from server.
  admin LOAD
- Once cancelled, any time user clicks button to server should not change db.
- Update with new documents.

- check that no matter how user interacts with interface, is robust (i.e. the 
  if consent form checkboxes are closed/opened)

X On admin side, use a map instead series of lists. Then updating state via
  studyStore is idempotent. In addition, we save participant state on server
  so upon load, can get any available data. We also load the parameters and
  whatever times are available.
X Make sure that once someone clicks a button, does not make dups on admin side.
  => suggested: we should disable the button after they click it once
X Competing timers once ready. Why is this happening? Maybe initialize or interval?
X Consent form, have yes/no square radio options. Only if they reply yes
  can they go to next question.
X Only if fully consent can we save their data (double-check this in server
  under consent).
X change Cancelled to Start
X save parameters better in server => have a session actually mean something
  so could theoretically host multiple discussions at once
X iFrame with discussion link
X connect to atlas mongo with link above and change password!!!
X some mechanism to encourage people to click the ready button on waiting
X make buttons bigger and stuff easier to interact with
X having instructions or something in waiting room
X submitting a parameter causes complete rerender of page :(
X redirect to completion link
X instead of admin assuming ready, start, end works, should do a handshake
X should probably return with success or error
X required questions that prevent one from continuing
